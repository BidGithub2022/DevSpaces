schemaVersion: 2.2.0
metadata:
  name: my-data-platform-devfile

components:
  - name: zookeeper
    container:
      image: confluentinc/cp-zookeeper:latest
      env:
        - ZOOKEEPER_CLIENT_PORT=2181
        - ZOOKEEPER_TICK_TIME=2000
      endpoints:
        - name: zookeeper
          targetPort: 2181
  
  - name: kafka
    container:
      image: confluentinc/cp-kafka:latest
      env:
        - KAFKA_BROKER_ID=1
        - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
        - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
        - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      endpoints:
        - name: kafka
          targetPort: 9092

  - name: control-center
    container:
      image: confluentinc/cp-enterprise-control-center:latest
      env:
        - CONTROL_CENTER_BOOTSTRAP_SERVERS=kafka:9092
        - CONTROL_CENTER_ZOOKEEPER_CONNECT=zookeeper:2181
      endpoints:
        - name: control-center
          targetPort: 9021

  - name: redis
    container:
      image: redis:latest
      endpoints:
        - name: redis
          targetPort: 6379

  - name: postgres
    container:
      image: postgres:latest
      env:
        - POSTGRES_DB=mydb
        - POSTGRES_USER=myuser
        - POSTGRES_PASSWORD=mypassword
      volumeMounts:
        - name: pgdata
          path: /var/lib/postgresql/data
      endpoints:
        - name: postgres
          targetPort: 5432

  - name: postgres-volume
    volume:
      name: pgdata
      size: 1Gi

commands:
  - id: run-services
    exec:
      group:
        kind: run
        components:
          - zookeeper
          - kafka
          - control-center
          - redis
          - postgres
          - postgres-volume
      commandLine: docker-compose up 
    group:
      kind: start
      isDefault: true
